services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    # ports:
    #   - 1433:1433
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: xitgmLwmp123
      MSSQL_PID: Developer
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -Usa -PxitgmLwmp123 -C -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  
  initial_db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    volumes:
      - ./database:/works
    command: >
      bash -c '
      /opt/mssql-tools18/bin/sqlcmd -S db -Usa -PxitgmLwmp123 -C -Q "CREATE DATABASE myusers";
      /opt/mssql-tools18/bin/sqlcmd -S db -Usa -PxitgmLwmp123 -C -d myusers -i /works/setup.sql;
      echo "All done!";
      '
    depends_on:
      db:
        condition: service_healthy
  
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - ${API_PORT:-3000}:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 5s
      retries: 5
      start_period: 3s
      timeout: 3s
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_USER=sa
      - DB_PASSWORD=xitgmLwmp123
      - DB_NAME=myusers
      - DB_SERVER=db
  
  api_test:
    build:
      context: ./postman
      dockerfile: Dockerfile
    volumes:
      - ./postman-test-report:/etc/newman/newman
  
  api_test2:
    build:
      context: ./postman
      dockerfile: Dockerfile
    volumes:
      - ./postman-test-report:/etc/newman/newman
  
  api_test3:
    build:
      context: ./postman
      dockerfile: Dockerfile
    volumes:
      - ./postman-test-report:/etc/newman/newman
    # depends_on:
    #   api:
    #     condition: service_healthy

  ui:
    build: ./frontend/vue-project
    ports:
      - 8888:80

  ui_test:
    build: ./playwright
    volumes:
      - ./playwright-report:/app/report